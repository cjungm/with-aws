AWSTemplateFormatVersion: '2010-09-09'
Description:  'AWS CloudFormation Template: 
   **WARNING** You will be billed for the AWS resources used if you create a stack
  from this template.'

#    MIT No Attribution
# Copyright 2020 Amazon Web Services (AWS)
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Parameters:
  VpcCIDR:
    Description: The IP range (CIDR notation) for this VPC
    Type: String
    Default: {YOUR_VPC_CIDR}

  PublicSubnet1CIDR:
    Description: The IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: {YOUR_PUBLIC_SUBNET_CIDR_1}

  PublicSubnet2CIDR:
    Description: The IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: {YOUR_PUBLIC_SUBNET_CIDR_2}

  PrivateSubnet1CIDR:
    Description: The IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: {YOUR_PRIVATE_SUBNET_CIDR_1}

  PrivateSubnet2CIDR:
    Description: The IP range (CIDR notation) for the private subnet in the second Availability Zone
    Type: String
    Default: {YOUR_PRIVATE_SUBNET_CIDR_2}

  BucketName:
    Description: S3 Bucket Name
    Type: String
    Default: {YOUR_S3_BUCKET_NAME}

  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH to the instances
    Type: AWS::EC2::KeyPair::KeyName

  ExpiryDate:
    Description: Tag Exipry date
    Type: String

  MyIp:
    Description: Current My Ip
    Type: String

  MasterUser:
    Description: OpenSearch Master User Name
    Type: String

  MasterPW:
    Description: OpenSearch Master Password
    Type: String

  OpenSearchDN:
    Description: OpenSearch Master Password
    Type: String

Resources:
  #####################################################################################################################
  # IMPORT RESOURCES
  #####################################################################################################################
  ImportedVPC:
    Type: AWS::EC2::VPC
    DeletionPolicy: Retain
    Properties:
      CidrBlock: !Ref VpcCIDR
  
  ImportedPublicSubnet1:
    Type: AWS::EC2::Subnet
    DeletionPolicy: Retain
    Properties:
      VpcId: !Ref ImportedVPC
      CidrBlock: !Ref PublicSubnet1CIDR

  ImportedPublicSubnet2:
    Type: AWS::EC2::Subnet
    DeletionPolicy: Retain
    Properties:
      VpcId: !Ref ImportedVPC
      CidrBlock: !Ref PublicSubnet2CIDR

  ImportedPrivateSubnet1:
    Type: AWS::EC2::Subnet
    DeletionPolicy: Retain
    Properties:
      VpcId: !Ref ImportedVPC
      CidrBlock: !Ref PrivateSubnet1CIDR

  ImportedPrivateSubnet2:
    Type: AWS::EC2::Subnet
    DeletionPolicy: Retain
    Properties:
      VpcId: !Ref ImportedVPC
      CidrBlock: !Ref PrivateSubnet2CIDR

  AppBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Ref BucketName

  ImportedPublicSG:
    Type: AWS::EC2::SecurityGroup
    DeletionPolicy: Retain
    Properties:
      VpcId: !Ref ImportedVPC
      GroupDescription: "security_group for public"

  SSMEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties: 
      PolicyDocument: 
        Statement:
          - Action: '*'
            Effect: Allow
            Principal: '*'
            Resource: '*'
      PrivateDnsEnabled: true
      SecurityGroupIds: 
        - !Ref ImportedPublicSG
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ssm'
      SubnetIds: 
        - !Ref ImportedPublicSubnet1
        - !Ref ImportedPublicSubnet2
      VpcEndpointType: "Interface"
      VpcId: !Ref ImportedVPC


# EC2 Instance - to put data into ES cluster      
  InstanceToES: 
    Type: AWS::CloudFormation::Stack
    DependsOn:
    - SSMEndpoint
    Properties:
      TemplateURL: !Sub {S3_HTTP_URL_STACK_TEMPLATE-instance_to_es.yaml}
      TimeoutInMinutes: '60'
      Parameters:
        EnvironmentName: opensearch-app-vpc
        InstanceType: t2.medium
        LatestAmiId: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
        VPC1CIDR: !Ref VpcCIDR
        SubnetId: !Ref ImportedPublicSubnet1
        VPCID: !Ref ImportedVPC
        KeyName: !Ref 'KeyName'
        ExpiryDate: !Ref 'ExpiryDate'
        MyIp: !Ref 'MyIp'
      Tags: 
        - Key: Name
          Value: 'InstanceToES'
        - Key: owner
          Value: '{OWNER}' 
        - Key: description
          Value: 'Stack amazon-opensearch search engine' 

# ES Domain
  ES:
    Type: AWS::CloudFormation::Stack
    DependsOn: 
    - InstanceToES
    Properties:
      TemplateURL: !Sub {S3_HTTP_URL_STACK_TEMPLATE-es_cluster.yaml}
      TimeoutInMinutes: '60' 
      Parameters:
        EnvironmentName: opensearch-app-vpc
        SecurityGroupId: !GetAtt InstanceToES.Outputs.SecurityGroupId
        VPCID: !Ref ImportedVPC
        SubnetId: !Ref ImportedPublicSubnet1
        MasterUser: !Ref MasterUser
        MasterPW: !Ref MasterPW
        PublicIP: !GetAtt InstanceToES.Outputs.PublicIP
        MyIp: !Ref 'MyIp'
        OpenSearchDN: !Ref 'OpenSearchDN'
        SSMRole: !GetAtt InstanceToES.Outputs.SSMRole
        SSMRoleARN: !GetAtt InstanceToES.Outputs.SSMRoleARN
      Tags: 
        - Key: Name
          Value: 'ES-Domain'
        - Key: owner
          Value: '{OWNER}' 
        - Key: description
          Value: 'Stack amazon-opensearch search engine' 

# API GW 
  IngestToES: 
    Type: AWS::CloudFormation::Stack
    DependsOn: 
    - ES
    Properties:
      TemplateURL: !Sub {S3_HTTP_URL_STACK_TEMPLATE-ingest_to_es.yaml}
      TimeoutInMinutes: '60'
      Parameters:
        InstanceId: !GetAtt InstanceToES.Outputs.InstanceId
      Tags: 
        - Key: Name
          Value: 'API GW'
        - Key: owner
          Value: '{OWNER}' 
        - Key: description
          Value: 'Stack amazon-opensearch search engine' 

# Lambda function 
  LambdaAndAPI: 
    Type: AWS::CloudFormation::Stack
    DependsOn:
    - IngestToES
    Properties:
      TemplateURL: !Sub {S3_HTTP_URL_STACK_TEMPLATE-lambda-api-cf_diy.yaml}
      TimeoutInMinutes: '60'
      Parameters: 
        ESHost: !GetAtt ES.Outputs.DomainEndpoint
        LambdaRole: !GetAtt ES.Outputs.LambdaRole
        ESInstanceID: !GetAtt InstanceToES.Outputs.InstanceId
        AppBucket: !Ref AppBucket
        SecurityGroupId: !GetAtt InstanceToES.Outputs.SecurityGroupId
        SubnetId: !Ref ImportedPublicSubnet1
      Tags: 
        - Key: Name
          Value: 'LambdaToES'
        - Key: owner
          Value: '{OWNER}' 
        - Key: description
          Value: 'Stack amazon-opensearch search engine' 

