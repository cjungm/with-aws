AWSTemplateFormatVersion: '2010-09-09'
Description: >-
   Template to launch an EC2 that is going to input data to the ES cluster.
   **WARNING** You will be billed for the AWS resources used if you create a stack
   from this template.

Parameters:
   EnvironmentName:
      Description: An environment name that is prefixed to resource names
      Type: String
   # KeyName:
   #    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
   #    Type: AWS::EC2::KeyPair::KeyName
   #    ConstraintDescription: must be the name of an existing EC2 KeyPair.
   KeyName:
      Description: Name of an existing EC2 KeyPair to enable SSH to the instances
      Type: AWS::EC2::KeyPair::KeyName
   ExpiryDate:
      Description: Tag Exipry date
      Type: String
   MyIp:
      Description: Current My Ip
      Type: String
   InstanceType:
      Description: EC2 instance type
      Type: String
      Default: t3.small
      AllowedValues: [t2.nano, t2.micro, t2.small, t2.medium, t3.nano, t3.micro, t3.small]
      ConstraintDescription: must be a valid EC2 instance type.
   LatestAmiId:
      Type:  'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
      Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
   VPC1CIDR:
      Description: The IP address range of the AWS vpc
      Type: String
      MinLength: 9
      MaxLength: 18
      Default: 0.0.0.0/0
      AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
      ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
   SubnetId:
      Description: Id of the subnet in which this instance will be deployed
      Type: String
   VPCID:
      Description: ID of the vpc
      Type: String

Resources:
   SSMRole:
      Type: AWS::IAM::Role
      Properties:
         AssumeRolePolicyDocument:
            Version: 2012-10-17
            Statement:
               -  Effect: Allow
                  Principal:
                     Service:
                        - ec2.amazonaws.com
                  Action:
                     - 'sts:AssumeRole'
         Path: /
         ManagedPolicyArns:
            - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM  # SSM으로 EC2 연결 기능
            - arn:aws:iam::aws:policy/AmazonS3FullAccess                # S3의 Code 접근 권한
            - arn:aws:iam::aws:policy/AWSLambda_FullAccess              # Lambda Update 수행 권한

   EC2InstanceProfile:
      Type: AWS::IAM::InstanceProfile
      Properties:
         Path: "/"
         Roles:
            - !Ref SSMRole 

   EC2Instance:
      Type: AWS::EC2::Instance
      Properties:
         InstanceType: !Ref 'InstanceType'
         SecurityGroupIds: [!Ref 'InstanceSecurityGroup']
         IamInstanceProfile:
            Ref: EC2InstanceProfile
         KeyName: !Ref 'KeyName'
         ImageId: !Ref 'LatestAmiId'
         SubnetId: !Ref 'SubnetId'
         SourceDestCheck: false
         UserData:
         # Sample Movie Data Download
            Fn::Base64: !Sub |
               #! /bin/bash

               curl -L https://docs.aws.amazon.com/opensearch-service/latest/developerguide/samples/sample-movies.zip > /tmp/sample-movies.zip
               unzip /tmp/sample-movies.zip -d /tmp/
         Tags:
            - Key: Name
              Value: cjm-es-data-server
            - Key: owner
              Value: cjm
            - Key: expiry-date
              Value: !Ref 'ExpiryDate'


   InstanceSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
         GroupDescription: Enable all traffic from VPC
         VpcId: !Ref 'VPCID'
         SecurityGroupIngress:
         # VPC 내에 통신
         - IpProtocol: -1
           CidrIp: !Ref 'VPC1CIDR' 
         # Local PC SSH 접근 허용
         - IpProtocol: tcp
           FromPort: '22'
           ToPort: '22'
           CidrIp: !Ref MyIp
         # Local PC Web Server 접근 허용
         - IpProtocol: tcp
           FromPort: '80'
           ToPort: '80'
           CidrIp: !Ref MyIp
         Tags:
            - Key: Name
              Value: !Sub ${EnvironmentName}-sg

Outputs:
   InstanceId:
      Description: InstanceId of the newly created EC2 instance
      Value: !Ref 'EC2Instance'
   AZ:
      Description: Availability Zone of the newly created EC2 instance
      Value: !GetAtt [EC2Instance, AvailabilityZone]
   PublicIP:
      Description: Instance PublicIP
      Value: !GetAtt EC2Instance.PublicIp
      Export:
         Name: !Sub "${AWS::StackName}-PublicIp"