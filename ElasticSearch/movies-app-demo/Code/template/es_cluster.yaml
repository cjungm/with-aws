AWSTemplateFormatVersion: "2010-09-09"
Description: "ES cluster that hosts the movie's info. With public access and test mode"

Parameters:
    PublicIP:
        Description: Public IP of the EC2 instance that is going to interact with ES
        Type: String
        AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
        ConstraintDescription: must be a valid IP of the form x.x.x.x 


Resources:
    
    lambdaSearchAppRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    -  Effect: Allow
                       Principal:
                         Service:
                            - lambda.amazonaws.com
                       Action:
                          - 'sts:AssumeRole'
            Path: /
            ManagedPolicyArns: 
                - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

    LambdaRolePolicies:
        Type: "AWS::IAM::Policy"
        DependsOn:
            - lambdaSearchAppRole
        Properties:
            PolicyName: "lambda-to-ES-cf"
            PolicyDocument:
                Version: "2012-10-17"
                Statement:
                    - Effect: Allow
                      Action: 'es:*'
                      Resource: '*'
            Roles: 
                - !Ref lambdaSearchAppRole             

    ElasticsearchDomain:
        Type: "AWS::Elasticsearch::Domain"
        Properties:
            DomainName: "search-app"
            ElasticsearchVersion: "7.10"
            ElasticsearchClusterConfig: 
                DedicatedMasterEnabled: false
                InstanceCount: 1
                InstanceType: "r6g.large.elasticsearch"
                ZoneAwarenessEnabled: false
                WarmEnabled: false
            AccessPolicies: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"${lambdaSearchAppRole.Arn}\"},\"Action\":\"es:ESHttpGet\",\"Resource\":\"*\"},{\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"es:*\",\"Resource\":\"*\",\"Condition\":{\"IpAddress\":{\"aws:SourceIp\":\"${PublicIP}/32\"}}}]}"
            NodeToNodeEncryptionOptions: 
                Enabled: true
            AdvancedOptions: 
                "rest.action.multi.allow_explicit_index": "true"
            EBSOptions: 
                EBSEnabled: true
                VolumeType: "gp2"
                VolumeSize: 10
            CognitoOptions: 
                Enabled: false
            DomainEndpointOptions: 
                EnforceHTTPS: true
                TLSSecurityPolicy: "Policy-Min-TLS-1-0-2019-07"
                CustomEndpointEnabled: false
            AdvancedSecurityOptions: 
                Enabled: false
                InternalUserDatabaseEnabled: false

    ESParamater:
        Type: AWS::SSM::Parameter
        Properties:
            Name: DomainEndpoint
            Type: String
            Value: !Join ['',['https://',!GetAtt [ElasticsearchDomain, DomainEndpoint]]]
            Description: SSM Parameter of ES domain.
    
                
Outputs: 
  DomainArn:
    Value:
      'Fn::GetAtt':
        - ElasticsearchDomain
        - DomainArn
    Export:
        Name: !Sub "${AWS::StackName}-DomainArn"
  DomainEndpoint:
    Value:
      'Fn::GetAtt':
        - ElasticsearchDomain
        - DomainEndpoint
    Export:
        Name: !Sub "${AWS::StackName}-DomainEndpoint"
  LambdaRole: 
    Value: !GetAtt lambdaSearchAppRole.Arn      

